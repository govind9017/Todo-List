{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/ReactApp/react-intro/src/editTask.js\";\nimport React from \"react\";\nimport \"./App.css\";\nexport default class EditTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.props.currTask.text);\n\n      if (this.props.currTask.text !== '') {\n        // this.props.onSubmit({\n        //   id: this.props.currTask.id,\n        //   text: this.props.currTask.text,\n        //   isCompleted: this.props.currTask.isCompleted\n        // });\n        this.setState({\n          editable: false\n        });\n      }\n    };\n\n    this.state = {\n      editable: false\n    };\n    this.onDoubleClick = this.onDoubleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onDoubleClick() {\n    this.setState({\n      editable: true\n    });\n  }\n\n  render() {\n    if (this.state.editable === false) {\n      return React.createElement(\"label\", {\n        className: this.props.currTask.isCompleted ? \"Completed\" : \"Pending\",\n        onDoubleClick: this.onDoubleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" \", this.props.currTask.text, \" \");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"Edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"textplace\",\n        type: \"text\",\n        value: this.props.currTask.text,\n        onChange: this.props.handleChange.bind(null, this.props.currTask),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Documents/ReactApp/react-intro/src/editTask.js"],"names":["React","EditTask","Component","constructor","props","handleSubmit","event","preventDefault","console","log","currTask","text","setState","editable","state","onDoubleClick","bind","render","isCompleted","handleChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,eAAe,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,YATmB,GASHC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,IAAhC;;AACA,UAAG,KAAKP,KAAL,CAAWM,QAAX,CAAoBC,IAApB,KAA4B,EAA/B,EAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,aAAKC,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGD;AAAC,KArBiB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKX,YAAL,GAAoB,KAAKA,YAAL,CAAkBW,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAgBDD,EAAAA,aAAa,GAAG;AACd,SAAKH,QAAL,CAAc;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKH,KAAL,CAAWD,QAAX,KAAwB,KAA5B,EAAmC;AACjC,aACE;AACE,QAAA,SAAS,EAAE,KAAKT,KAAL,CAAWM,QAAX,CAAoBQ,WAApB,GAAkC,WAAlC,GAAgD,SAD7D;AAEE,QAAA,aAAa,EAAE,KAAKH,aAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,GAJH,EAKG,KAAKX,KAAL,CAAWM,QAAX,CAAoBC,IALvB,EAK6B,GAL7B,CADF;AASD,KAVD,MAUO;AACL,aACE;AAAK,QAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWM,QAAX,CAAoBC,IAH7B;AAIE,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWe,YAAX,CAAwBH,IAAxB,CAA6B,IAA7B,EAAmC,KAAKZ,KAAL,CAAWM,QAA9C,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAYD;AACF;;AArDmD","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nexport default class EditTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editable: false,\n    };\n    this.onDoubleClick = this.onDoubleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.props.currTask.text);\n    if(this.props.currTask.text !==''){\n    // this.props.onSubmit({\n    //   id: this.props.currTask.id,\n    //   text: this.props.currTask.text,\n    //   isCompleted: this.props.currTask.isCompleted\n    // });\n    this.setState({\n        editable: false\n    })\n  }}\n\n  onDoubleClick() {\n    this.setState({ editable: true });\n  }\n\n  render() {\n    if (this.state.editable === false) {\n      return (\n        <label\n          className={this.props.currTask.isCompleted ? \"Completed\" : \"Pending\"}\n          onDoubleClick={this.onDoubleClick}\n        >\n          {\" \"}\n          {this.props.currTask.text}{\" \"}\n        </label>\n      );\n    } else {\n      return (\n        <div className= \"Edit\">\n          <form onSubmit={this.handleSubmit}>\n            <input\n              className='textplace'\n              type='text'\n              value={this.props.currTask.text}\n              onChange={this.props.handleChange.bind(null, this.props.currTask)}\n            />\n          </form>\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}