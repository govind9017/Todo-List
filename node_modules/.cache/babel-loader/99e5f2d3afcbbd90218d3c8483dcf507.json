{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/ReactApp/react-intro/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./addTask\";\nimport EditTask from \"./editTask\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderList = () => {\n      const todos = this.getTodos();\n      let todoList = [];\n      todos.map((task, index) => {\n        console.log(task, \"task and index\");\n        let todoItem;\n        todoItem = React.createElement(\"div\", {\n          className: \"tasktab2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkBox\",\n          checked: task.isCompleted,\n          onClick: () => {\n            this.completedTask(task.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), React.createElement(EditTask, {\n          currTask: task,\n          onSubmit: this.updateTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"Destroy\",\n          type: \"button\",\n          onClick: () => {\n            this.delTask(task.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \" \", \"X\", \" \"));\n        todoList.push(todoItem);\n      });\n      console.log(todoList, \"todoList\");\n      return todoList;\n    };\n\n    this.state = {\n      allTask: [],\n      todoToShow: \"All\"\n    };\n    this.addTask = this.addTask.bind(this);\n    this.delTask = this.delTask.bind(this);\n    this.selectAll = this.selectAll.bind(this);\n    this.completedTask = this.completedTask.bind(this);\n  }\n\n  addTask(todo) {\n    if (todo.text !== \"\") {\n      this.setState({\n        allTask: [todo, ...this.state.allTask]\n      });\n    }\n  }\n\n  updateTask(todo) {\n    this.setState({\n      allTask: this.state.allTask.filter(item => {\n        if (item.id === todo.id) {\n          item.text = todo.text;\n          return item;\n        } else {\n          return item;\n        }\n      })\n    });\n  }\n\n  delTask(index) {\n    this.setState({\n      allTask: this.state.allTask.filter(a => a.id !== index)\n    });\n  }\n\n  completedTask(index) {\n    this.setState({\n      allTask: this.state.allTask.filter(item => {\n        if (index === item.id) {\n          item.isCompleted = !item.isCompleted;\n          return item;\n        } else {\n          return item;\n        }\n      })\n    });\n  }\n\n  updateTodoToShow(s) {\n    this.setState({\n      todoToShow: s\n    });\n  }\n\n  selectAll() {\n    let s = this.state.allTask.some(function (val) {\n      return val.isCompleted === false;\n    });\n\n    if (s === true) {\n      this.setState({\n        allTask: this.state.allTask.filter(item => {\n          item.isCompleted = true;\n          return item;\n        })\n      });\n    } else {\n      this.setState({\n        allTask: this.state.allTask.filter(item => {\n          item.isCompleted = false;\n          return item;\n        })\n      });\n    }\n  }\n\n  getTodos() {\n    let todos = [];\n\n    if (this.state.todoToShow === \"All\") {\n      todos = this.state.allTask;\n    } else if (this.state.todoToShow === \"Active\") {\n      todos = this.state.allTask.filter(task => !task.isCompleted);\n    } else if (this.state.todoToShow === \"Completed\") {\n      todos = this.state.allTask.filter(task => task.isCompleted);\n    }\n\n    return todos;\n  }\n\n  render() {\n    // console.log(this.props.tasks, this.state.allTask, \"props and state\")\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Todos\"), React.createElement(\"div\", {\n      className: \"tasktab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tasktab2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"toggle\",\n      type: \"button\",\n      onClick: this.selectAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \" \", \"\\u2713\", \" \"), React.createElement(AddTask, {\n      onSubmit: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), this.renderList(), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \" \", todos.filter(task => !task.isCompleted).length, \" items left\", \" \"), React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"All\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"All \"), React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"Active\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Active\", \" \"), React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"Completed\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Completed\", \" \")));\n  }\n\n} //\n// this.state = {\n//     tasks: [\n//         {id:'task1', name:'task1', isCompleted: false}\n//     ]\n// }\n// var newTask= {\n//     id: '',\n//     name: e.target.value,\n//     isCompleted: false\n// }\n// this.setState({\n//     tasks:[...this.state.tasks, newTask]\n// })\n// newState = [\n//     ...this.state.tasks.splice(0,1),\n//     newUpdated\n//     ...this.state.tasks.splice(index, lengh)\n// ]","map":{"version":3,"sources":["/Users/apple/Documents/ReactApp/react-intro/src/App.js"],"names":["React","AddTask","EditTask","App","Component","constructor","props","renderList","todos","getTodos","todoList","map","task","index","console","log","todoItem","isCompleted","completedTask","id","updateTask","delTask","push","state","allTask","todoToShow","addTask","bind","selectAll","todo","text","setState","filter","item","a","updateTodoToShow","s","some","val","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./addTask\";\nimport EditTask from \"./editTask\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTask: [],\n      todoToShow: \"All\"\n    };\n    this.addTask = this.addTask.bind(this);\n    this.delTask = this.delTask.bind(this);\n    this.selectAll = this.selectAll.bind(this);\n    this.completedTask = this.completedTask.bind(this);\n  }\n  addTask(todo) {\n    if (todo.text !== \"\") {\n      this.setState({\n        allTask: [todo, ...this.state.allTask]\n      });\n    }\n  }\n\n  updateTask(todo) {\n    this.setState({\n      allTask: this.state.allTask.filter(item => {\n        if (item.id === todo.id) {\n          item.text = todo.text;\n          return item;\n        } else {\n          return item;\n        }\n      })\n    });\n  }\n\n  delTask(index) {\n    this.setState({ allTask: this.state.allTask.filter(a => a.id !== index) });\n  }\n\n  completedTask(index) {\n    this.setState({\n      allTask: this.state.allTask.filter(item => {\n        if (index === item.id) {\n          item.isCompleted = !item.isCompleted;\n          return item;\n        } else {\n          return item;\n        }\n      })\n    });\n  }\n\n  updateTodoToShow(s) {\n    this.setState({ todoToShow: s });\n  }\n\n  selectAll() {\n    let s = this.state.allTask.some(function(val) {\n      return val.isCompleted === false;\n    });\n    if (s === true) {\n      this.setState({\n        allTask: this.state.allTask.filter(item => {\n          item.isCompleted = true;\n          return item;\n        })\n      });\n    } else {\n      this.setState({\n        allTask: this.state.allTask.filter(item => {\n          item.isCompleted = false;\n          return item;\n        })\n      });\n    }\n  }\n  getTodos(){\n    let todos = [];\n    if (this.state.todoToShow === \"All\") {\n      todos = this.state.allTask;\n    } else if (this.state.todoToShow === \"Active\") {\n      todos = this.state.allTask.filter(task => !task.isCompleted);\n    } else if (this.state.todoToShow === \"Completed\") {\n      todos = this.state.allTask.filter(task => task.isCompleted);\n    }\n    return todos;\n  }\n  renderList = () => {\n    const todos  = this.getTodos();\n    let todoList = [];\n    todos.map((task, index) => {\n      console.log(task, \"task and index\")\n      let todoItem;\n      todoItem = (\n        <div className='tasktab2'>\n          <input\n            type='checkBox'\n            checked={task.isCompleted}\n            onClick={() => {\n              this.completedTask(task.id);\n            }}\n          />\n\n          <EditTask currTask={task} onSubmit={this.updateTask} />\n          <button\n            className='Destroy'\n            type='button'\n            onClick={() => {\n              this.delTask(task.id);\n            }}\n          >\n            {\" \"}\n            X{\" \"}\n          </button>\n        </div>\n      );\n      todoList.push(todoItem);\n    });\n    console.log(todoList, \"todoList\");\n    return todoList;\n  };\n  render() {\n    // console.log(this.props.tasks, this.state.allTask, \"props and state\")\n    return (\n      <div>\n        <h1 className='heading'>Todos</h1>\n        <div className='tasktab'>\n          <div className='tasktab2'>\n            <button className='toggle' type='button' onClick={this.selectAll}>\n              {\" \"}\n              ✓{\" \"}\n            </button>\n            <AddTask onSubmit={this.addTask} />\n          </div>\n          {this.renderList()}\n          <label>\n            {\" \"}\n            {todos.filter(task => !task.isCompleted).length} items left{\" \"}\n          </label>\n          <button onClick={() => this.updateTodoToShow(\"All\")}>All </button>\n          <button onClick={() => this.updateTodoToShow(\"Active\")}>\n            Active{\" \"}\n          </button>\n          <button onClick={() => this.updateTodoToShow(\"Completed\")}>\n            Completed{\" \"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n//\n// this.state = {\n//     tasks: [\n//         {id:'task1', name:'task1', isCompleted: false}\n//     ]\n// }\n\n// var newTask= {\n//     id: '',\n//     name: e.target.value,\n//     isCompleted: false\n// }\n\n// this.setState({\n//     tasks:[...this.state.tasks, newTask]\n// })\n\n// newState = [\n//     ...this.state.tasks.splice(0,1),\n//     newUpdated\n//     ...this.state.tasks.splice(index, lengh)\n// ]\n"]},"metadata":{},"sourceType":"module"}