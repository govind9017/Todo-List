{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/ReactApp/react-intro/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport AddTask from './addTask';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTask: [],\n      todoToShow: \"All\"\n    };\n    this.addTask = this.addTask.bind(this);\n    this.delTask = this.delTask.bind(this);\n    this.selectAll = this.selectAll.bind(this);\n    this.completedTask = this.completedTask.bind(this);\n  }\n\n  addTask(todo) {\n    this.setState({\n      allTask: [todo, ...this.state.allTask]\n    });\n  }\n\n  delTask(index) {\n    this.setState({\n      allTask: this.state.allTask.filter(a => a.id !== index)\n    });\n  }\n\n  completedTask(index) {\n    this.setState({\n      allTask: this.state.allTask.filter(item => {\n        if (index === item.id) {\n          item.isCompleted = !item.isCompleted;\n          return item;\n        } else {\n          return item;\n        }\n      })\n    });\n  }\n\n  updateTodoToShow(s) {\n    this.setState({\n      todoToShow: s\n    });\n  }\n\n  selectAll() {\n    let s = this.state.allTask.some(function (val) {\n      return val.isCompleted === false;\n    });\n\n    if (s === false) {\n      this.setState({\n        allTask: this.state.allTask.filter(item => {\n          item.isCompleted = true;\n          return item;\n        })\n      });\n    } else {\n      this.setState({\n        allTask: this.state.allTask.filter(item => {\n          item.isCompleted = false;\n          return item;\n        })\n      });\n    }\n  }\n\n  render() {\n    // console.log(this.props.tasks, this.state.allTask, \"props and state\")\n    let todos = [];\n\n    if (this.state.todoToShow === \"All\") {\n      todos = this.state.allTask;\n    } else if (this.state.todoToShow === \"Active\") {\n      todos = this.state.allTask.filter(task => !task.isCompleted);\n    } else if (this.state.todoToShow === \"Completed\") {\n      todos = this.state.allTask.filter(task => task.isCompleted);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Todos\"), React.createElement(\"div\", {\n      className: \"tasktab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.selectAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" \\u2713 \"), React.createElement(AddTask, {\n      onSubmit: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), todos.map(task => React.createElement(\"div\", {\n      className: \"tasktab2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkBox\",\n      checked: task.isCompleted,\n      onClick: () => {\n        this.completedTask(task.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: task.isCompleted ? \"Completed\" : \"Pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" \", task.text, \" \"), React.createElement(\"button\", {\n      class: \"Destroy\",\n      type: \"button\",\n      onClick: () => {\n        this.delTask(task.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" X \"))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"  \", todos.filter(task => !task.isCompleted).length, \" items left \"), React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"All\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"All \"), React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"Active\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Active \"), React.createElement(\"button\", {\n      onClick: () => this.updateTodoToShow(\"Completed\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Completed \")));\n  }\n\n} // \n// this.state = {\n//     tasks: [\n//         {id:'task1', name:'task1', isCompleted: false}\n//     ]\n// }\n// var newTask= {\n//     id: '',\n//     name: e.target.value,\n//     isCompleted: false\n// }\n// this.setState({\n//     tasks:[...this.state.tasks, newTask]\n// })\n// newState = [\n//     ...this.state.tasks.splice(0,1),\n//     newUpdated\n//     ...this.state.tasks.splice(index, lengh)\n// ]","map":{"version":3,"sources":["/Users/apple/Documents/ReactApp/react-intro/src/App.js"],"names":["React","AddTask","App","Component","constructor","props","state","allTask","todoToShow","addTask","bind","delTask","selectAll","completedTask","todo","setState","index","filter","a","id","item","isCompleted","updateTodoToShow","s","some","val","render","todos","task","map","text","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css';\nimport AddTask from './addTask'\n\nexport default class App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            allTask: [],\n            todoToShow: \"All\"\n        };\n        this.addTask= this.addTask.bind(this);\n        this.delTask= this.delTask.bind(this);\n        this.selectAll= this.selectAll.bind(this);\n        this.completedTask = this.completedTask.bind(this);\n    }\n    addTask(todo){\n        this.setState({allTask: [todo, ...this.state.allTask]});\n    }\n\n\n    delTask(index){\n        this.setState({allTask: this.state.allTask.filter(a => a.id !==index)});\n    }\n\n    completedTask(index){\n        this.setState({\n            allTask: this.state.allTask.filter(item=>{\n                if(index === item.id){\n                    item.isCompleted = !item.isCompleted;\n                    return item;\n                }\n                else{\n                    return item;\n                }\n            })\n        })\n    }\n\n    updateTodoToShow(s){\n        this.setState({todoToShow: s})\n    }\n\n    selectAll(){\n\n        let s = this.state.allTask.some(function (val) { \n            return val.isCompleted===false;\n          });\n        if(s===false){\n        this.setState({\n            allTask: this.state.allTask.filter(item=>{\n                    item.isCompleted=true;\n                    return item;\n                })  \n            })\n        }\n\n        else{\n            this.setState({\n                allTask:this.state.allTask.filter(item=>{\n                    item.isCompleted=false;\n                    return item;\n                })\n            })\n        }\n    }\n\n    render(){\n        // console.log(this.props.tasks, this.state.allTask, \"props and state\")\n        let todos =[];\n        if (this.state.todoToShow===\"All\") {\n            todos = this.state.allTask;\n        } else if(this.state.todoToShow===\"Active\") {\n            todos = this.state.allTask.filter(task=> !task.isCompleted);\n        } else if(this.state.todoToShow===\"Completed\") {\n            todos = this.state.allTask.filter(task=> task.isCompleted);\n        }\n\n        return(\n            <div>\n            <h1 className= \"heading\">Todos</h1>\n            <div className= \"tasktab\">\n            <button type=\"button\" onClick = {this.selectAll}> ✓ </button>\n            <AddTask onSubmit={this.addTask} />\n               {todos.map((task) =>\n                <div className= \"tasktab2\">            \n                <input type = \"checkBox\" checked = {task.isCompleted} onClick = {()=> {\n                    this.completedTask(task.id);\n                }} />\n                <label className={(task.isCompleted)? \"Completed\": \"Pending\"}> {task.text} </label>\n                <button class =\"Destroy\" type=\"button\" onClick = {()=>{ this.delTask(task.id);}}> X </button>\n                </div>\n                )\n            }\n            <label>  {todos.filter(task=> !task.isCompleted).length} items left </label>\n            <button onClick={()=> this.updateTodoToShow(\"All\")}>All </button>\n            <button onClick={()=>this.updateTodoToShow(\"Active\")}>Active </button>\n            <button onClick={()=> this.updateTodoToShow(\"Completed\")}>Completed </button>\n            </div>\n            </div>\n        );\n    };\n}\n\n// \n// this.state = {\n//     tasks: [\n//         {id:'task1', name:'task1', isCompleted: false}\n//     ]\n// }\n\n// var newTask= {\n//     id: '',\n//     name: e.target.value,\n//     isCompleted: false\n// }\n\n// this.setState({\n//     tasks:[...this.state.tasks, newTask]\n// })\n\n\n// newState = [\n//     ...this.state.tasks.splice(0,1),\n//     newUpdated\n//     ...this.state.tasks.splice(index, lengh)\n// ]"]},"metadata":{},"sourceType":"module"}