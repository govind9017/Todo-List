{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/ReactApp/react-intro/src/showTask.js\";\nimport React from 'react'; // import DeleteTask from './deleteTask';\n\nexport default class ShowTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTask: this.props.tasks\n    };\n    this.delTask = this.delTask.bind(this);\n    this.completedTask = this.completedTask.bind(this);\n  }\n\n  delTask(index) {\n    // this.state.alltask.splice(index,1);\n    // this.setState({alltask: this.state.alltask});\n    // this.setState({alltask: React.addons.update(this.state.alltask, {$splice: [[index,1]]})})\n    this.setState({\n      allTask: this.state.allTask.filter((a, ind) => ind !== index)\n    });\n  }\n\n  completedTask(index) {\n    // (this.state.getDone[index]===\"Pending\") ? \n    // (this.state.getDone[index]=\"Done\"): (this.state.getDone[index]=\"Pending\") ;\n    // this.setState({getDone: this.state.getDone});\n    this.setState({\n      allTask: this.state.allTask.filter((item, i) => {\n        if (index === i) {\n          item.isCompleted = !item.isCompleted;\n          return item;\n        } else {\n          return item;\n        }\n      })\n    }); // this.setState({getDone: this.state.getDone.filter((a,ind)=> )\n    // this.setState({getDone: React.addons.update(this.state.getDone, {index: {$set: \"Pending\"}})});\n  }\n\n  render() {\n    // var status = (this.state.allTask.isCompleted)? \"Completed\": \"Pending\";\n    const listItems = this.state.allTask.map((task, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: this.state.allTask[index].isCompleted ? \"Completed\" : \"Pending\",\n      keys: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, task.task), React.createElement(\"input\", {\n      type: \"button\",\n      value: this.state.allTask[index].isCompleted ? \"Completed\" : \"Pending\",\n      onClick: () => {\n        this.completedTask(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Delete\",\n      onClick: () => {\n        this.delTask(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" \", listItems);\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Documents/ReactApp/react-intro/src/showTask.js"],"names":["React","ShowTask","Component","constructor","props","state","allTask","tasks","delTask","bind","completedTask","index","setState","filter","a","ind","item","i","isCompleted","render","listItems","map","task"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,eAAe,MAAMC,QAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG;AADX,KAAb;AAGA,SAAKC,OAAL,GAAc,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAd;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDD,EAAAA,OAAO,CAACG,KAAD,EAAO;AACV;AACA;AACA;AACA,SAAKC,QAAL,CAAc;AAACN,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,CAAmBO,MAAnB,CAA0B,CAACC,CAAD,EAAGC,GAAH,KAAWA,GAAG,KAAIJ,KAA5C;AAAV,KAAd;AACH;;AAEDD,EAAAA,aAAa,CAACC,KAAD,EAAO;AAChB;AACA;AACA;AAEA,SAAKC,QAAL,CAAc;AACVN,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,CAAmBO,MAAnB,CAA0B,CAACG,IAAD,EAAMC,CAAN,KAAU;AACzC,YAAGN,KAAK,KAAKM,CAAb,EAAe;AACXD,UAAAA,IAAI,CAACE,WAAL,GAAmB,CAACF,IAAI,CAACE,WAAzB;AACA,iBAAOF,IAAP;AACH,SAHD,MAII;AACA,iBAAOA,IAAP;AACH;AAEJ,OATQ;AADC,KAAd,EALgB,CAiBhB;AACA;AACH;;AAEDG,EAAAA,MAAM,GAAE;AACJ;AAEJ,UAAMC,SAAS,GAAG,KAAKf,KAAL,CAAWC,OAAX,CAAmBe,GAAnB,CAAuB,CAACC,IAAD,EAAMX,KAAN,KACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAG,MAAA,SAAS,EAAG,KAAKN,KAAL,CAAWC,OAAX,CAAmBK,KAAnB,EAA0BO,WAA3B,GAAyC,WAAzC,GAAsD,SAApE;AAA+E,MAAA,IAAI,EAAIP,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+FW,IAAI,CAACA,IAApG,CADD,EAIA;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAI,KAAKjB,KAAL,CAAWC,OAAX,CAAmBK,KAAnB,EAA0BO,WAA3B,GAAyC,WAAzC,GAAsD,SAAnF;AAA8F,MAAA,OAAO,EAAI,MAAK;AAC1G,aAAKR,aAAL,CAAmBC,KAAnB;AACC,OAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EASA;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,QAA5B;AAAqC,MAAA,OAAO,EAAI,MAAI;AAChD,aAAKH,OAAL,CAAaG,KAAb;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,CADc,CAAlB;AAgBI,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMS,SAAN,CADJ;AAGH;;AA5DkD","sourcesContent":["import React from 'react';\n// import DeleteTask from './deleteTask';\n\nexport default class ShowTask  extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            allTask: this.props.tasks,\n        };\n        this.delTask= this.delTask.bind(this);\n        this.completedTask = this.completedTask.bind(this);\n    }\n\n    delTask(index){\n        // this.state.alltask.splice(index,1);\n        // this.setState({alltask: this.state.alltask});\n        // this.setState({alltask: React.addons.update(this.state.alltask, {$splice: [[index,1]]})})\n        this.setState({allTask: this.state.allTask.filter((a,ind) => ind !==index)});\n    }\n\n    completedTask(index){\n        // (this.state.getDone[index]===\"Pending\") ? \n        // (this.state.getDone[index]=\"Done\"): (this.state.getDone[index]=\"Pending\") ;\n        // this.setState({getDone: this.state.getDone});\n\n        this.setState({\n            allTask: this.state.allTask.filter((item,i)=>{\n                if(index === i){\n                    item.isCompleted = !item.isCompleted;\n                    return item;\n                }\n                else{\n                    return item;\n                }\n\n            })\n        })\n        // this.setState({getDone: this.state.getDone.filter((a,ind)=> )\n        // this.setState({getDone: React.addons.update(this.state.getDone, {index: {$set: \"Pending\"}})});\n    }\n\n    render(){\n        // var status = (this.state.allTask.isCompleted)? \"Completed\": \"Pending\";\n\n    const listItems = this.state.allTask.map((task,index) =>\n        <div>\n         <p className={(this.state.allTask[index].isCompleted)? \"Completed\": \"Pending\"} keys = {index}>{task.task}</p>\n        \n        {/* pending task */}\n        <input type=\"button\" value= {(this.state.allTask[index].isCompleted)? \"Completed\": \"Pending\"} onClick = {()=> {\n            this.completedTask(index);\n            }} />\n\n       {/* to delete task  */}\n        <input type=\"button\" value= \"Delete\" onClick = {()=>{\n            this.delTask(index);\n        } } />\n        </div>\n        );\n\n        return(\n            <ul> {listItems}</ul>\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}