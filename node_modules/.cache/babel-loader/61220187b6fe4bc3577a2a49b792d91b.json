{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/ReactApp/react-intro/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport AddTask from './addTask';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTask: []\n    };\n    this.addTask = this.addTask.bind(this);\n    this.delTask = this.delTask.bind(this);\n    this.completedTask = this.completedTask.bind(this);\n  }\n\n  addTask(todo) {\n    this.setState({\n      allTask: [todo, ...this.state.allTask]\n    });\n  }\n\n  delTask(index) {\n    this.setState({\n      allTask: this.state.allTask.filter((a, ind) => ind !== index)\n    });\n  }\n\n  completedTask(index) {\n    this.setState({\n      allTask: this.state.allTask.filter((item, i) => {\n        if (index === i) {\n          item.isCompleted = !item.isCompleted;\n          return item;\n        } else {\n          return item;\n        }\n      })\n    });\n  }\n\n  render() {\n    // console.log(this.props.tasks, this.state.allTask, \"props and state\")\n    const listItems = this.state.allTask.map((task, index) => React.createElement(\"div\", {\n      keys: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: this.state.allTask[index].isCompleted ? \"Completed\" : \"Pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkBox\",\n      id: \"myCheck\",\n      onClick: () => {\n        this.completedTask(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), task.text, React.createElement(\"button\", {\n      class: \"Destroy\",\n      type: \"button\",\n      onClick: () => {\n        this.delTask(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" X \"))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(AddTask, {\n      onSubmit: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" \", listItems));\n  }\n\n} // \n// this.state = {\n//     tasks: [\n//         {id:'task1', name:'task1', isCompleted: false}\n//     ]\n// }\n// var newTask= {\n//     id: '',\n//     name: e.target.value,\n//     isCompleted: false\n// }\n// this.setState({\n//     tasks:[...this.state.tasks, newTask]\n// })\n// newState = [\n//     ...this.state.tasks.splice(0,1),\n//     newUpdated\n//     ...this.state.tasks.splice(index, lengh)\n// ]","map":{"version":3,"sources":["/Users/apple/Documents/ReactApp/react-intro/src/App.js"],"names":["React","AddTask","App","Component","constructor","props","state","allTask","addTask","bind","delTask","completedTask","todo","setState","index","filter","a","ind","item","i","isCompleted","render","listItems","map","task","id","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport AddTask from './addTask'\n\nexport default class App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            allTask: []\n        };\n        this.addTask= this.addTask.bind(this);\n        this.delTask= this.delTask.bind(this);\n        this.completedTask = this.completedTask.bind(this);\n    }\n    addTask(todo){\n        this.setState({allTask: [todo, ...this.state.allTask]});\n    }\n\n\n    delTask(index){\n        this.setState({allTask: this.state.allTask.filter((a,ind) => ind !==index)});\n    }\n\n    completedTask(index){\n        this.setState({\n            allTask: this.state.allTask.filter((item,i)=>{\n                if(index === i){\n                    item.isCompleted = !item.isCompleted;\n                    return item;\n                }\n                else{\n                    return item;\n                }\n            })\n        })\n\n    }\n\n\n    render(){\n        // console.log(this.props.tasks, this.state.allTask, \"props and state\")\n        const listItems = this.state.allTask.map((task,index) =>\n        <div keys = {task.id}>\n            <p className={(this.state.allTask[index].isCompleted)? \"Completed\": \"Pending\"}>\n            \n            <input type = \"checkBox\" id=\"myCheck\" onClick = {()=> {\n            this.completedTask(index);\n            }} />\n\n            {task.text}\n\n            <button class = \"Destroy\" type=\"button\" onClick = {()=>{ this.delTask(index); } }> X </button>\n            </p>\n        </div>\n        );\n\n        return(\n            <div>\n            <AddTask onSubmit={this.addTask} />\n           <ul> {listItems}</ul>\n            </div>\n        );\n    };\n}\n\n\n\n// \n// this.state = {\n//     tasks: [\n//         {id:'task1', name:'task1', isCompleted: false}\n//     ]\n// }\n\n// var newTask= {\n//     id: '',\n//     name: e.target.value,\n//     isCompleted: false\n// }\n\n// this.setState({\n//     tasks:[...this.state.tasks, newTask]\n// })\n\n\n// newState = [\n//     ...this.state.tasks.splice(0,1),\n//     newUpdated\n//     ...this.state.tasks.splice(index, lengh)\n// ]"]},"metadata":{},"sourceType":"module"}